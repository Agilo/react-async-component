// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration tests server rendering with client rehydration 1`] = `"<div><div><div><span>In Render.</span></div><div>DeferredAsyncBob Loading</div><div><span>In Boundary but outside an AsyncComponent, server render me!</span></div></div></div>"`;

exports[`integration tests server rendering with client rehydration 2`] = `
Object {
  "errors": Object {},
  "resolved": Object {
    "1": true,
    "2": true,
    "4": true,
  },
}
`;

exports[`integration tests server rendering with client rehydration 3`] = `
<AsyncComponentProvider
  asyncContext={
    Object {
      "failed": [Function],
      "getNextId": [Function],
      "getState": [Function],
      "resolved": [Function],
    }
  }
  rehydrateState={
    Object {
      "errors": Object {},
      "resolved": Object {},
    }
  }
>
  <div>
    <AsyncBob>
      <Bob>
        <div>
          <AsyncBobTwo>
            <Bob>
              <div>
                <span>
                  In Render.
                </span>
              </div>
            </Bob>
          </AsyncBobTwo>
          <DeferredAsyncBob>
            <LoadingComponent>
              <div>
                DeferredAsyncBob Loading
              </div>
            </LoadingComponent>
          </DeferredAsyncBob>
          <BoundaryAsyncBob>
            <Bob>
              <div>
                <span>
                  In Boundary but outside an AsyncComponent, server render me!
                </span>
                <AsyncBobThree />
              </div>
            </Bob>
          </BoundaryAsyncBob>
        </div>
      </Bob>
    </AsyncBob>
  </div>
</AsyncComponentProvider>
`;

exports[`integration tests server rendering with client rehydration 4`] = `
<AsyncComponentProvider
  asyncContext={
    Object {
      "failed": [Function],
      "getNextId": [Function],
      "getState": [Function],
      "resolved": [Function],
    }
  }
  rehydrateState={
    Object {
      "errors": Object {},
      "resolved": Object {},
    }
  }
>
  <div>
    <AsyncBob>
      <Bob>
        <div>
          <AsyncBobTwo>
            <Bob>
              <div>
                <span>
                  In Render.
                </span>
              </div>
            </Bob>
          </AsyncBobTwo>
          <DeferredAsyncBob>
            <Bob>
              <div>
                <span>
                  In Defer.
                </span>
              </div>
            </Bob>
          </DeferredAsyncBob>
          <BoundaryAsyncBob>
            <Bob>
              <div>
                <span>
                  In Boundary but outside an AsyncComponent, server render me!
                </span>
                <AsyncBobThree>
                  <Bob>
                    <div>
                      <span>
                        In Boundary - Do not server render me!
                      </span>
                    </div>
                  </Bob>
                </AsyncBobThree>
              </div>
            </Bob>
          </BoundaryAsyncBob>
        </div>
      </Bob>
    </AsyncBob>
  </div>
</AsyncComponentProvider>
`;
